definitions:
  dto.CoordinatesOutApp:
    properties:
      latitude:
        type: string
      longitude:
        type: string
    type: object
  dto.DefaultResponseMessageOut:
    properties:
      message:
        type: string
    type: object
  dto.LocationCreatedResponseOut:
    properties:
      document_id:
        type: string
    type: object
  dto.LocationInApp:
    properties:
      latitude:
        example: "-23.55052"
        type: string
      longitude:
        example: "-46.633308"
        type: string
      speed:
        example: 80
        minimum: 0
        type: integer
      status:
        enum:
        - moving
        - stopped
        - offline
        example: moving
        type: string
      vehicle_id:
        example: ABC1234
        type: string
    required:
    - latitude
    - longitude
    - status
    - vehicle_id
    type: object
  dto.LocationOutApp:
    properties:
      id:
        type: string
      location:
        $ref: '#/definitions/dto.CoordinatesOutApp'
      speed:
        type: integer
      status:
        type: string
      timestamp:
        type: string
      vehicle_id:
        type: string
    type: object
  handler.GlobalErrorHandlerResp:
    properties:
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API to manage locations from vehicles
  title: Location API
  version: "1.0"
paths:
  /api/v1/locations:
    post:
      consumes:
      - application/json
      description: Insert location data into database
      parameters:
      - description: Request of creating location object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LocationInApp'
      produces:
      - application/json
      responses:
        "201":
          description: document created
          schema:
            $ref: '#/definitions/dto.LocationCreatedResponseOut'
        "400":
          description: validation error
          schema:
            $ref: '#/definitions/handler.GlobalErrorHandlerResp'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.GlobalErrorHandlerResp'
      summary: Insert location data
      tags:
      - Locations
  /api/v1/locations/{id}:
    delete:
      description: Delete location data from database based on a document_id
      parameters:
      - description: id from document
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted document
          schema:
            $ref: '#/definitions/dto.DefaultResponseMessageOut'
        "404":
          description: document not found
          schema:
            $ref: '#/definitions/dto.DefaultResponseMessageOut'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.GlobalErrorHandlerResp'
      summary: Delete location data
      tags:
      - Locations
    get:
      description: Get location data from database based on a document_id
      parameters:
      - description: id from document
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: located document
          schema:
            $ref: '#/definitions/dto.LocationOutApp'
        "404":
          description: document not found
          schema:
            $ref: '#/definitions/dto.DefaultResponseMessageOut'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.GlobalErrorHandlerResp'
      summary: Get location data
      tags:
      - Locations
    put:
      description: Update location data into database based on a document_id
      parameters:
      - description: id from document
        in: path
        name: id
        required: true
        type: string
      - description: Request of updating location object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LocationInApp'
      produces:
      - application/json
      responses:
        "200":
          description: updated document
          schema:
            $ref: '#/definitions/dto.DefaultResponseMessageOut'
        "400":
          description: validation error
          schema:
            $ref: '#/definitions/handler.GlobalErrorHandlerResp'
        "404":
          description: document not found
          schema:
            $ref: '#/definitions/dto.DefaultResponseMessageOut'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.GlobalErrorHandlerResp'
      summary: Update location data
      tags:
      - Locations
swagger: "2.0"
